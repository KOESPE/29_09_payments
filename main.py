import asyncio
import uuid

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.types import Message, BotCommand, PreCheckoutQuery, FSInputFile

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = Bot(token='123:ABC')
dp = Dispatcher()

PROVIDER_TOKEN = '401643678:TEST:78de6c4b-372b-47b9-ad90-e6b48eeea748'
FILENAME = '–ì—Ä–æ–∫–∞–µ–º_–∞–ª–≥–æ—Ä–∏—Ç–º—ã_–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞_–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞_2022.pdf'

# –ù–ï –†–ê–ë–û–¢–ê–ï–¢
# @dp.message(Command(commands='inline_pay'))
# async def start(message: Message):
#     kb = InlineKeyboardBuilder()
#     kb.button(text=f"–û–ø–ª–∞—Ç–∏—Ç—å 20 ‚≠êÔ∏è", pay=True)  # –ö–Ω–æ–ø–∫–∞ —Å –æ–ø–ª–∞—Ç–æ–π –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤–∞—è
#     await message.answer('–í–∞–º –≤—ã—Å—Ç–∞–≤–ª–µ–Ω —Å—á–µ—Ç –∑–∞ –æ–ø–ª–∞—Ç—É —É—Å–ª—É–≥', reply_markup=kb.as_markup())


@dp.message(Command(commands='create_invoice'))
async def create_invoice(message: Message):
    payment_id = str(uuid.uuid4())  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞

    await message.answer_invoice(
        title='–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ –ø–æ Python',
        description='–ì—Ä–æ–∫–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º—ã. –ê–≤—Ç–æ—Ä: –ü—É–¥–æ–≤ –ö.–î.',
        payload=payment_id,
        provider_token=PROVIDER_TOKEN,
        currency='RUB',
        prices=[
            types.LabeledPrice(label='–û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥', amount=29990)
        ]
    )


@dp.pre_checkout_query()
async def process_pre_checkout_query(query: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query_id=query.id, ok=True)


@dp.message(F.successful_payment)
async def success_payment_handler(message: Message):
    await message.answer(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –∫–Ω–∏–≥–∏!ü§ó")
    await message.answer_document(FSInputFile(FILENAME))


async def main():
    main_menu_commands = [
        BotCommand(command='/inline_pay',
                   description='–ü–∞—Ä–∞–º–µ—Ç—Ä pay=True'),
        BotCommand(command='/create_invoice',
                   description='–ë–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏')
    ]
    await bot.set_my_commands(main_menu_commands)

    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
